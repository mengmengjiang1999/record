m=2**3

from Crypto.Util.number import *
from gmpy2 import *

ra = 8607
amin=(ra//2)**4
# print(amin)
# print(int(amin).bit_length())
# 342835182924481

rb = 7150
bmin=(rb//2)**4
# print(bmin)
# print(int(bmin).bit_length())
# 163344375390625

n = 28098722633030488893312283528887829649553659514053781575839443778746567710358683558509768930786261053897116586758341172713231425712608663734433267335002333760261583976848753337338129716792124202066388265994360580739266657504481707827816610267011366001142300093926601793983384666604377328323493638248481764153911921310476848622133065363121266256704484624454408157373499690818152144645904269865423396689289703578108901228755055729490144039004436875090060394642072739901593627031008002995026214521011417826487454434739123729500727953687489123493596702814564384266479646307886530097993679086392267067430262508230063492593
n_r8=gmpy2.iroot(n,m)[0]
# print(n_r8)
# print(int(n_r8).bit_length())
# 113785211780087890729835403913740862621352579296072519073738292962853891673256
# 这个是ab的上界



nbs=[2,2,2,7,17,17,23,144680046702678787996517557250872603,2112824752321302638932489226261448911]

a1=144680046702678787996517557250872603
b1=2112824752321302638932489226261448911


for i in range(1<<6):
    a=144680046702678787996517557250872603
    b=2112824752321302638932489226261448911
    cnt=i
    for j in range(7):
        if cnt&1:
            a*=nbs[j]
        else:
            b*=nbs[j]
        cnt=cnt>>1
    # print(int(a).bit_length())
    # print(int(b).bit_length())

    # print(a<b)
    # print(b<a*2)

    p=a**8+ra
    q=b**8+rb
    # print(int(p).bit_length())
    # print(int(q).bit_length())
    if a.bit_length()<=128 and b.bit_length()<=128:
        if p.bit_length()==1024 and q.bit_length()==1024:
            if a<b and b<a*2 or b<a and a<b*2:
                print(a,b)
    
            


# print(int(a1).bit_length())
# print(int(b1).bit_length())

# print(a1<b1)
# print(b1<a1*2)

# p=a1**8+ra
# q=b1**8+rb
# print(int(p).bit_length())
# print(int(q).bit_length())


