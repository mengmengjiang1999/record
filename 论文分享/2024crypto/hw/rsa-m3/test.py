from Crypto.Util.number import *
import sys

c
c
n=484732819287776387476911447520224312585849135827616735460183409455464932030240876884052463765131713541541327482195773323985696570358367200382990836148470396546037023331710472698992696776896770468555033751792324107131746048408086832539477664999561307470420235377464733644041679667880512549161979440832815292056851822952329388065861237525859032069554751046858853049856852617188788526703502138845510594210804373711836152019157453686566613733930611229899311559551356874845516458193340905469211993827024348143461350532348839687135244731616267173290550446758681742868487419011938707182525665731632192838661234205311585308491427772991236783179411918156835325048418452781750732215128337305277913373746503421918464386102832809242205960894515727488697423140334512228083028981216158610453206205602042580149435317353351496430367313607493176425180159132706035569739311250020981476615621981120076564284233056005903402372577357577579499969079149820000546340061642688032952582518786062837910029880612427474983136776449387456882534846524107719383437775352148057404125766783332088040390510123645980172855677343889955284244138050919869308298836246865980404234940589940371589329921367679364015989543264125619947729696986140434360998144059725866782690213

t=(c2-c1-1)%n  #3m^2+3m=3m(m+1)

print(t)

sys.setrecursionlimit(100000)

def extended_gcd(a, b):
    if b == 0:
        return a, 1, 0
    else:
        d, x, y = extended_gcd(b, a % b)
        return d, y, x - (a // b) * y

def solve_mod_equation3(n, t):
    d, x, y = extended_gcd(3, n)
    if t % d != 0:
        return None  # 无解
    x0 = (x * (t // d)) % n
    return x0

def solve_mod_equation(x1, n, t):
    d, x, y = extended_gcd(x1, n)
    if t % d != 0:
        return None  # 无解
    x0 = (x * (t // d)) % n
    return x0

# 求解 x
# x = solve_mod_equation3(n, t)  # x=m(m+1)
x=solve_mod_equation(3,n,t)
print(x)

#另一方面

t2=(c1+c2)%n # t2=(2m+1)(x+1)
print(t2)

x2=solve_mod_equation(x+1,n,t2) #x2=2m+1
print(x2)

x3=solve_mod_equation(2,n,x2-1)
print(x3)

print(long_to_bytes(x3))